name: Sync Wiki

on:
  push:
    branches:
      - main
    paths:
      - 'docs/wiki/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync docs/wiki to GitHub Wiki
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          : "${GITHUB_TOKEN:?GITHUB_TOKEN is required}"

          build_dir="_wikibuild"
          rm -rf "$build_dir"
          mkdir -p "$build_dir"

          rsync -a --delete "docs/wiki/" "$build_dir/"

          if [ ! -f "$build_dir/Home.md" ]; then
            cat <<'EOT' > "$build_dir/Home.md"
# Home

This page was automatically generated because no Home.md file existed in docs/wiki/.
EOT
          fi

          find "$build_dir" -type f -name '*.md' -print0 | while IFS= read -r -d '' file; do
            sed -E -i 's/\((?!https?:\/\/)([^)#?]+)\.md(\)|#[^)]+))/\(\1\2/g' "$file"
          done

          pushd "$build_dir" > /dev/null

          git init
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add --all

          if git diff --cached --quiet; then
            echo "No wiki content to sync."
            popd > /dev/null
            exit 0
          fi

          git commit -m "Sync wiki from docs/wiki"

          remote_url="https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.wiki.git"
          git remote add origin "$remote_url"

          head_ref="$(git ls-remote --symref origin HEAD 2>/dev/null || true)"
          default_branch="$(printf '%s' "$head_ref" | awk '/^ref:/ {print $2}' | sed 's@refs/heads/@@')"

          if [ -z "$default_branch" ]; then
            if git ls-remote --heads origin main | grep -q 'refs/heads/main'; then
              default_branch="main"
            elif git ls-remote --heads origin master | grep -q 'refs/heads/master'; then
              default_branch="master"
            else
              default_branch="main"
            fi
          fi

          git fetch origin "$default_branch" || true
          if git rev-parse --verify "origin/$default_branch" >/dev/null 2>&1; then
            if git diff --quiet HEAD "origin/$default_branch"; then
              echo "Wiki already up to date; nothing to push."
              popd > /dev/null
              exit 0
            fi
          fi

          git push --force-with-lease origin HEAD:"$default_branch"
          popd > /dev/null
